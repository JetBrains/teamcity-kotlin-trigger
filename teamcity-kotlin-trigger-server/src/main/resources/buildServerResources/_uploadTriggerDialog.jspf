<%@ page import="jetbrains.buildServer.buildTriggers.remote.controller.UploadPolicyController" %>

<%--
  ~ Copyright 2000-2020 JetBrains s.r.o.
  ~
  ~ Licensed under the Apache License, Version 2.0 (the "License");
  ~ you may not use this file except in compliance with the License.
  ~ You may obtain a copy of the License at
  ~
  ~ https://www.apache.org/licenses/LICENSE-2.0
  ~
  ~ Unless required by applicable law or agreed to in writing, software
  ~ distributed under the License is distributed on an "AS IS" BASIS,
  ~ WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  ~ See the License for the specific language governing permissions and
  ~ limitations under the License.
  --%>

<bs:dialog dialogId="uploadTriggerDialog" title="Upload trigger policy jar"
           closeCommand="BS.UploadTriggerDialog.close()"
           dialogClass="uploadDialog">
    <forms:multipartForm id="uploadTriggerForm" targetIframe="hidden-iframe">
        <input type="hidden" id="fileName" name="fileName" value="" class="mediumField"/>
        <input type="hidden" id="projectId" name="projectId" value="${project.externalId}"/>
        <input type="hidden" id="updatedPolicyName" name="updatedPolicyName" value=""/>

        <table class="runnerFormTable">
            <tr>
                <th>Trigger Policy</th>
                <td>
                    <forms:file name="fileToUpload"/>
                    <div id="uploadError" class="error hidden"></div>
                </td>
            </tr>
        </table>
        <div class="popupSaveButtonsBlock">
            <forms:submit id="uploadTriggerDialogSubmit" label="Upload trigger policy jar"/>
            <forms:cancel onclick="BS.UploadTriggerDialog.close()"/>
            <forms:saving id="uploadingProgress" savingTitle="Uploading..."/>
        </div>
    </forms:multipartForm>
</bs:dialog>

<script type="application/javascript">
    $j('#uploadTriggerForm').attr('action', window["base_uri"] + '${UploadPolicyController.PATH}');

    BS.UploadTriggerDialog = OO.extend(BS.AbstractWebForm, OO.extend(BS.AbstractModalDialog, OO.extend(BS.FileBrowse, {
        onFileChanged: function (filename) {
        },

        getContainer: function () {
            return $('uploadTriggerDialog');
        },

        formElement: function () {
            return $('uploadTriggerForm');
        },

        refresh: function () {
            BS.reload(true);
        },

        savingIndicator: function () {
            return $j('#uploadingProgress');
        },

        open: function (updatedPolicyName) {
            $j('#updatedPolicyName').val(updatedPolicyName)
            this.show();
            return false;
        }
    })))

    BS.UploadTriggerDialog.prepareFileUpload();
</script>